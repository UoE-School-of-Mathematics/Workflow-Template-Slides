on: push
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Copy source files and strip beamer overlay specs
        run: |
            for file in *.tex; do
              if [[ "$file" != *_HTML.tex ]]; then 
                newfile=$(basename "${file}" .tex)_HTML.tex
                sed 's/\(\\[a-zA-Z]*\)<\([0-9]\?-\?[0-9]\?,\?\)\+>/\1/g' "${file}" > "${newfile}"
                sed -i 's/\(\\begin{frame}\)\s*\\frametitle{\(.*\)}/\1{\2}/g' "${newfile}"
                mv "${file}" "${file}"~
              fi
            done
        
      # - name: Commit all changed files back to the repository
        # uses: stefanzweifel/git-auto-commit-action@v6

      - name: Commit and push modified files to GitHub
        run: |
          git checkout main
          git add -A
          git diff-index --quiet HEAD || git commit -m "Add new files"
          git push origin main

      - name: Compile with BookML
        uses: vlmantova/bookml-action@v1
        with:
          checkout: false
          scheme: full
          timeout-minutes: 6
          replace-bookml: true
          version: v0.18.1

      - name: Recover the name of the original tex files
        run: |
            for file in *.tex~; do
                mv "${file}" $(basename "${file}" .tex~).tex
            done

      - name: Extract zip files
        run: |
          mkdir -p docs
          for file in *_HTML.zip; do
            if [[ "$file" != SCORM*.zip && "$file" != AUX*.zip ]]; then 
              unzip -o "$file" -d docs
            fi
          done

      - name: Move contents from subdirectory
        run: |
          for dir in docs/*/; do
            if [ -d "$dir" ]; then
              rsync -av --ignore-existing "$dir" docs/
              rm -rf "$dir"
            fi
          done

      # - name: Configure git
        # run: |
          # git config --global user.name "GitHub Actions"
          # git config --global user.email "actions@github.com"

      - name: Commit and push changes to GitHub Pages
        run: |
          git checkout -b gh-pages
          git add docs/*
          git diff-index --quiet HEAD || git commit -m "Add extracted files"
          git push origin gh-pages --force
